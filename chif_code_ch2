<!DOCTYPE html>
<html lang="en">
​
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
​
    <title>Mini App</title>
​
    <style>
        body {
            margin: 0;
            padding: 1em;
            background-color: #fff;
        }
​
        [data-cart-info],
        [data-credit-card] {
            transform: scale(0.78);
            margin-left: -3.4em;
        }
​
        [data-cc-info] input:focus,
        [data-cc-digits] input:focus {
            outline: none;
        }
​
        .mdc-card__primary-action,
        .mdc-card__primary-action:hover {
            cursor: auto;
            padding: 20px;
            min-height: inherit;
        }
​
        [data-credit-card] [data-card-type] {
            transition: width 1.5s;
            margin-left: calc(100% - 130px);
        }
​
        [data-credit-card].is-visa {
            background: linear-gradient(135deg, #622774 0%, #c53364 100%);
        }
​
        [data-credit-card].is-mastercard {
            background: linear-gradient(135deg, #65799b 0%, #5e2563 100%);
        }
​
        .is-visa [data-card-type],
        .is-mastercard [data-card-type] {
            width: auto;
        }
​
        input.is-invalid,
        .is-invalid input {
            text-decoration: line-through;
        }
​
        ::placeholder {
            color: #fff;
        }
​
        /* Add Your CSS From Here */
        div[data-cart-info] span {
            display: inline-block;
            vertical-align: middle;
        }
​
        span.material-icons {
            font-size: 150px;
        }
​
        div[data-credit-card] {
            width: 435px;
            min-height: 240px;
            border-radius: 10px;
            background-color: #5d6874;
        }
​
        img[data-card-type] {
            display: block;
            width: 120px;
            height: 60px;
        }
​
        div[data-cc-digits] {
            margin-top: 2em;
        }
​
        div[data-cc-digits] input {
            color: #fff;
            font-size: 2em;
            line-height: 2em;
            border: none;
            background: none;
            margin-right: 0.5em;
        }
​
        div[data-cc-info] {
            margin-top: 1em;
        }
​
        div[data-cc-info] input {
            color: #fff;
            font-size: 1.2em;
            border: none;
            background: none;
        }
​
        div[data-cc-info] input:nth-child(2) {
            padding-right: 10px;
            float: right;
        }
​
        button[data-pay-btn] {
            position: fixed;
            width: 90%;
            border: 1px solid;
            bottom: 20px;
        }
    </style>
</head>
​
<body>
​
    <!-- your HTML goes here -->
    <div data-cart-info>
        <h1 class="mdc-typography--headline4">
            <span class="material-icons">shopping_cart</span>
            <span data-bill></span>
        </h1>
    </div>
    <div data-credit-card class="mdc-card mdc-card-outlined">
        <div class="mdc-card__primary-action">
            <img src="https://placehold.it/120x60.png?text=Card" data-card-type alt="Card" />
            <div data-cc-digits>
                <input type="text" placeholder="----" size="4">
                <input type="text" placeholder="----" size="4">
                <input type="text" placeholder="----" size="4">
                <input type="text" placeholder="----" size="4">
            </div>
            <div data-cc-info>
                <input type="text" placeholder="Name Surname" size="20" aria-label="Name Surname">
                <input type="text" placeholder="MM/YY" size="6" maxlength="6" aria-label="Expiry date" </div> </div>
                    </div> </div> <button class="mdc-button" data-pay-btn>Pay Now</button>
                <script>
                    const supportedCards = {
                        visa, mastercard
                    };
​
                    const countries = [
                        {
                            code: "US",
                            currency: "USD",
                            currencyName: '',
                            country: 'United States'
                        },
                        {
                            code: "NG",
                            currency: "NGN",
                            currencyName: '',
                            country: 'Nigeria'
                        },
                        {
                            code: 'KE',
                            currency: 'KES',
                            currencyName: '',
                            country: 'Kenya'
                        },
                        {
                            code: 'UG',
                            currency: 'UGX',
                            currencyName: '',
                            country: 'Uganda'
                        },
                        {
                            code: 'RW',
                            currency: 'RWF',
                            currencyName: '',
                            country: 'Rwanda'
                        },
                        {
                            code: 'TZ',
                            currency: 'TZS',
                            currencyName: '',
                            country: 'Tanzania'
                        },
                        {
                            code: 'ZA',
                            currency: 'ZAR',
                            currencyName: '',
                            country: 'South Africa'
                        },
                        {
                            code: 'CM',
                            currency: 'XAF',
                            currencyName: '',
                            country: 'Cameroon'
                        },
                        {
                            code: 'GH',
                            currency: 'GHS',
                            currencyName: '',
                            country: 'Ghana'
                        }
                    ];
​
                    const billHype = () => {
                        const billDisplay = document.querySelector('.mdc-typography--headline4');
                        if (!billDisplay) return;
​
                        billDisplay.addEventListener('click', () => {
                            const billSpan = document.querySelector("[data-bill]");
                            if (billSpan &&
                                appState.bill &&
                                appState.billFormatted &&
                                appState.billFormatted === billSpan.textContent) {
                                window.speechSynthesis.speak(
                                    new SpeechSynthesisUtterance(appState.billFormatted)
                                );
                            }
                        });
                    };
​
                    const appState = {};
​
                    const formatAsMoney = (amount, buyerCountry) => {
                        console.log(amount, buyerCountry);
                        let matchingCountry = countries.find((countryObj) => {
                            const { code, currency, country } = countryObj;
                            return country.toLowerCase() === buyerCountry.toLowerCase();
                        });
                        let countryCurrency = 'USD';
                        let countryCode = 'US';
                        if (typeof (matchingCountry) !== 'undefined') {
                            countryCurrency = matchingCountry.currency;
                            countryCode = matchingCountry.code;
                        };
​
                        const formattedStr = amount.toLocaleString(`en-${countryCode}`, {
                            style: 'currency', currency: countryCurrency
                        });
                        return formattedStr;
                    }
                    const flagIfInvalid = (field, isValid) => {
                        if (isValid) {
                            field.classList.remove("is-invalid");
                        } else {
                            field.classList.add("is-invalid");
                        }
                    }
                    const expiryDateFormatIsValid = (field) => {
​
                        const tmpinput = field.value.split("/");
                        if (tmpinput.length != 2) {
                            //console.log("field does match the / input");
                            return false;
                        }
                        if (Number(tmpinput[0]) < 1 || Number(tmpinput[0]) > 12 || isNaN(Number(tmpinput[0]))) {
                            //console.log("month does not match 1-12");
                            return false;
                        }
                        if (Number(tmpinput[1]) < 0 || Number(tmpinput[1]) > 99 || isNaN(Number(tmpinput[1]))) {
                            //console.log("year does not match 0-99");
                            return false;
                        }
​
                        return true;
                    }
​
​
​
                    const detectCardType = (first4Digits) => {
                        console.log('Detecting...', first4Digits);
                        const uiElem = document.querySelector('div[data-credit-card');
                        const uiCardLogo = document.querySelector('img[data-card-type]');
​
                        if (first4Digits[0] == 4) {
                            uiElem.classList.add("is-visa");
                            uiElem.classList.remove("is-mastercard");
                            uiCardLogo.src = visa;
                            return "is-visa";
                        } else if (first4Digits[0] == 5) {
                            uiElem.classList.add("is-mastercard");
                            uiElem.classList.remove("is-visa");
                            uiCardLogo.src = mastercard;
                            return "is-mastercard";
                        } else {
                            return false;
                        }
​
                    }
​
​
                    const validateCardExpiryDate = () => {
​
                        const field = document.querySelector('div[data-cc-info] input:nth-child(2)');
​
                        const userInput = field.value.split("/");
                        const isFormatValid = expiryDateFormatIsValid(field);
​
                        let isFutureDate = false;
                        if (isFormatValid) {
                            //check if future date
                            const dateNow = new Date();
                            const cardDate = new Date("20" + Number(userInput[1]), Number(userInput[0]));
                            if (cardDate > dateNow) {
                                isFutureDate = true;
                            }
                        }
​
                        const validity = (isFormatValid == true && isFutureDate == true);
​
                        flagIfInvalid(field, validity);
                        console.log(validity);
                        return validity;
​
                    }
​
                    const validateCardHolderName = () => {
                        const field = document.querySelector('div[data-cc-info] input:first-child');
                        let isTwoNames = false;
                        let isThreeChars = false;
​
                        const splitName = field.value.split(" ");
                        if (splitName.length == 2) {
                            isTwoNames = true;
                            isThreeChars = (splitName[0].length > 2 && splitName[1].length > 2);
                        }
​
                        const validity = (isTwoNames == true && isThreeChars == true);
                        flagIfInvalid(field, validity);
                        console.log(validity);
                        return validity;
​
                    }
​
                    const validateWithLuhn = (digits) => {
                        console.log("Validating...", digits);
                        if (digits.length !== 16) {
                            return false;
                        }
                        let total = 0;
                        for (i = 0; i < digits.length; ++i) {
                            if (typeof (digits[i]) !== 'number') {
                                return false;
                            }
                            if (i % 2 == 0) {
                                let thisDoubled = digits[i] * 2;
                                if (thisDoubled > 9) {
                                    thisDoubled = thisDoubled - 9;
                                }
                                total = total + thisDoubled;
                            } else {
                                total = total + Number(digits[i]);
                            }
​
                        }
                        return (total % 10 == 0);
                    }
​
                    const validateCardNumber = () => {
                        const digits = appState.cardDigits.flat();
                        const isValidLuhn = validateWithLuhn(digits);
​
                        const field = document.querySelector('div[data-cc-digits]');
                        flagIfInvalid(field, isValidLuhn);
​
                        return isValidLuhn;
​
                    }
​
                    const validatePayment = () => {
                        validateCardNumber();
                        validateCardHolderName();
                        validateCardExpiryDate();
                    }
​
                    const acceptCardNumbers = (event, fieldIndex) => {
​
                    }
​
                    const smartInput = (event, fieldIndex, fields) => {
​
                        //check if parent div is data-cc-digits
                        if (fields[fieldIndex].getAttribute("placeholder") == "----" || fields[fieldIndex].getAttribute("placeholder") == "MM/YY") {
​
                            //watch for backspace key
                            const acceptedKeys = ['Backspace', 'Tab', 'Shift', 'Delete', 'ArrowRight', 'ArrowLeft'];
​
​
                            if (fields[fieldIndex].getAttribute("placeholder") == "----") {
                                if (!acceptedKeys.includes(event.key)) {
                                    event.preventDefault();
                                }
                            }
​
                            if (fields[fieldIndex].getAttribute("placeholder") == "MM/YY") {
                                if (!acceptedKeys, includes(event.key) && event.key != "/") {
                                    event.preventDefault();
                                }
                            }
​
​
​
                            const userInput = parseInt(event.key);
​
                            if (isNaN(userInput)) {
                                return false;
                            }
                            const thisField = fields[fieldIndex];
​
​
                            if (thisField.value.length < thisField.getAttribute("size")) {
                                appState.cardDigits[fieldIndex][thisField.value.length] = userInput;
​
                                thisField.value = thisField.value + userInput;
​
                                //detect card type
                                if (fieldIndex == 0) {
                                    const first4Digits = appState.cardDigits[0]
                                    detectCardType(first4Digits);
                                }
​
                            }
​
                            if (fieldIndex < 3) {
                                setTimeout(() => {
                                    let textMask = '';
                                    let firstDigits = '';
                                    for (i = 0; i < thisField.value.length; i++) {
                                        textMask += "$";
                                    }
​
                                    thisField.value = textMask;
                                }, 500);
                            }
                        }
​
                    }
​
                    const smartCursor = (event, fieldIndex, fields) => {
                        if (fields[fieldIndex].value.length + 1 > fields[fieldIndex].getAttribute('size')) {
                            const nextField = fields[fieldIndex + 1];
                            if (typeof (nextField) != "undefined") {
                                nextField.focus();
                                return;
                            } else {
                                fields[fieldIndex].blur();
                            }
                        };
                    }
​
                    const enableSmartTyping = () => {
                        const fields = document.querySelectorAll('input');
                        fields.forEach((field, index, fields) => {
                            field.addEventListener('keyup', (event) => smartCursor(event, index, fields));
                            field.addEventListener('keydown', (event) => smartInput(event, index, fields));
                        });
​
                    }
​
                    const uiCanInteract = () => {
                        document.querySelector('div[data-cc-digits] input:first-child').focus();
                        document.querySelector('button[data-pay-btn]').addEventListener('click', validatePayment);
​
                        billHype();
                        enableSmartTyping();
​
                    }
​
                    const displayCartTotal = ({ results }) => {
                        const [data, ...otherdata] = results;
                        const { itemsInCart, buyerCountry } = data;
                        appState.items = itemsInCart;
                        appState.country = buyerCountry;
​
                        appState.bill = itemsInCart.reduce((total, item) => {
                            return total + (item.price * item.qty);
                        }, 0)
                        appState.billFormatted = formatAsMoney(appState.bill, appState.country);
​
                        document.querySelector('span[data-bill').textContent = appState.billFormatted;
​
                        appState.cardDigits = [];
                        appState.cardDigits[0] = [];
                        appState.cardDigits[1] = [];
                        appState.cardDigits[2] = [];
                        appState.cardDigits[3] = [];
​
                        uiCanInteract();
​
                    }
​
                    const fetchBill = () => {
                        const apiHost = 'https://randomapi.com/api';
                        const apiKey = '006b08a801d82d0c9824dcfdfdfa3b3c';
                        const apiEndpoint = `${apiHost}/${apiKey}`;
​
                        fetch(apiEndpoint)
                            .then(response => response.json())
                            .then(data => displayCartTotal(data))
                            .catch(err => console.log(err));
​
                    };
​
                    const startApp = () => {
                        fetchBill();
                    };
​
                    startApp();
                </script>
</body>
​
</html
